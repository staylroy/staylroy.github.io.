// Simple UI interactions for demo (index.html)
// NOTE: form sends demo alerts. Replace with API/Google Sheets integration as needed.

document.addEventListener('DOMContentLoaded', () => {
  // –ü–æ–∏—Å–∫
  const searchBtn = document.getElementById('searchBtn');
  searchBtn?.addEventListener('click', () => {
    const q = document.getElementById('q-destination').value.trim();
    const type = document.getElementById('q-type').value;
    if(!q) return alert('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.');
    alert('–ü–æ–∏—Å–∫ —Ç—É—Ä–æ–≤: ' + q + (type?(' ‚Äî '+type):''));
  });

  // –ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö
  document.querySelectorAll('.card .btn[data-place]').forEach(btn=>{
    btn.addEventListener('click', e=>{
      const place=e.currentTarget.dataset.place;
      const toInput=document.getElementById('to');
      if(toInput) toInput.value=place;
      window.scrollTo({top:0,behavior:'smooth'});
    });
  });

  // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  const modal=document.getElementById('modal');
  const modalClose=document.querySelector('.modal-close');

  document.getElementById('submitBtn')?.addEventListener('click', ()=>{
    const name=document.getElementById('name').value.trim();
    const email=document.getElementById('email').value.trim();
    if(!name||!email) return alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è –∏ email.');

    const payload={name,email,to:document.getElementById('to').value,date:document.getElementById('date').value,note:document.getElementById('note').value,ts:new Date().toISOString()};
    console.log('Booking payload (demo):',payload);

    modal.style.display='flex';
    setTimeout(()=>{modal.style.display='none';},3000);
    modalClose.onclick=()=>{modal.style.display='none';};

    document.getElementById('bookingForm').reset();
  });

  // –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
  const mobileBtn=document.querySelector('.mobile-menu');
  const navOverlay=document.getElementById('navOverlay');
  mobileBtn?.addEventListener('click', ()=>navOverlay.classList.toggle('show'));
  document.querySelectorAll('a[href^="#"]').forEach(link=>{
    link.addEventListener('click', e=>{
      const target=document.querySelector(link.getAttribute('href'));
      if(target){ e.preventDefault(); target.scrollIntoView({behavior:'smooth'}); navOverlay.classList.remove('show'); }
    });
  });

  // Animate on scroll
  const scrollElements=document.querySelectorAll('.animate-on-scroll');
  const scrollObserver=new IntersectionObserver(entries=>{
    entries.forEach(entry=>{ if(entry.isIntersecting) entry.target.classList.add('visible'); });
  },{threshold:0.1});
  scrollElements.forEach(el=>scrollObserver.observe(el));

  // Count-up
  const counters=document.querySelectorAll('.count-up');
  const counterObserver=new IntersectionObserver(entries=>{
    entries.forEach(entry=>{
      if(entry.isIntersecting&&!entry.target.classList.contains('counted')){
        const el=entry.target,target=+el.dataset.target;
        let count=0,step=Math.ceil(target/100);
        const interval=setInterval(()=>{
          count+=step;
          if(count>=target){count=target;clearInterval(interval);}
          el.textContent=count.toLocaleString('ru-RU')+' ‚ÇΩ';
        },20);
        el.classList.add('counted');
      }
    });
  },{threshold:0.5});
  counters.forEach(counter=>counterObserver.observe(counter));

  // –û—Ç–∑—ã–≤—ã
  const reviewsRow=document.getElementById('reviewsRow');
  const reviewForm=document.getElementById('reviewForm');
  const reviewBtn=document.getElementById('reviewBtn');
  const reviews=JSON.parse(localStorage.getItem('reviews')||'[]');
  reviews.forEach(r=>{
    const div=document.createElement('div'); div.className='test';
    div.innerHTML=`<strong>${r.name}</strong><p class="small">${r.text}</p>`;
    reviewsRow.appendChild(div);
  });
  reviewBtn?.addEventListener('click', ()=>{
    const name=document.getElementById('reviewName').value.trim();
    const text=document.getElementById('reviewText').value.trim();
    if(!name||!text) return alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è –∏ –æ—Ç–∑—ã–≤.');
    const review={name,text}; reviews.push(review); localStorage.setItem('reviews',JSON.stringify(reviews));
    const div=document.createElement('div'); div.className='test';
    div.innerHTML=`<strong>${name}</strong><p class="small">${text}</p>`;
    reviewsRow.appendChild(div); reviewForm.reset();
  });
});
document.getElementById('clearReviewsBtn').addEventListener('click', () => {
  if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –æ—Ç–∑—ã–≤—ã?')) {
    localStorage.removeItem('reviews');
    document.getElementById('reviewsRow').innerHTML = '';
    alert('–û—Ç–∑—ã–≤—ã —É–¥–∞–ª–µ–Ω—ã');
  }
});

const TOKEN = "8279383835:AAGeymPPGvI_xorSKR4C_CUNQ3_r1CHtGkY";
const CHAT_ID = "1180510649";

document.getElementById('submitBtn').addEventListener('click', () => {
  const payload = {
    name: document.getElementById('name').value.trim(),
    email: document.getElementById('email').value.trim(),
    to: document.getElementById('to').value.trim(),
    date: document.getElementById('date').value,
    note: document.getElementById('note').value.trim(),
  };

  const text = `üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ Stayl Travely:
üë§ –ò–º—è: ${payload.name}
üìß Email: ${payload.email}
‚úàÔ∏è –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ${payload.to}
üìÖ –î–∞—Ç–∞: ${payload.date}
üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${payload.note}`;

  fetch(`https://api.telegram.org/bot${TOKEN}/sendMessage`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ chat_id: CHAT_ID, text })
  })
  .then(r => r.json())
  .then(data => {
    alert("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram!");
    document.getElementById("bookingForm").reset();
  })
  .catch(err => alert("–û—à–∏–±–∫–∞: " + err));
});
document.addEventListener('DOMContentLoaded', () => {
  // –ü–æ–∏—Å–∫, –∫–∞—Ä—Ç–æ—á–∫–∏ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ‚Äî –∫–∞–∫ —Ä–∞–Ω—å—à–µ

  // –û—Ç–∑—ã–≤—ã
  const reviewsRow = document.getElementById('reviewsRow');
  const reviewForm = document.getElementById('reviewForm');
  const reviewBtn = document.getElementById('reviewBtn');

  // –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ localStorage
  const reviews = JSON.parse(localStorage.getItem('reviews') || '[]');
  reviews.forEach(r=>{
    const div = document.createElement('div');
    div.className='test';
    div.innerHTML=`<strong>${r.name}</strong><p class="small">${r.text}</p>`;
    reviewsRow.appendChild(div);
  });

  reviewBtn?.addEventListener('click', ()=>{
    const name = document.getElementById('reviewName').value.trim();
    const text = document.getElementById('reviewText').value.trim();
    if(!name || !text) return alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è –∏ –æ—Ç–∑—ã–≤.');
    const review = {name,text};
    reviews.push(review);
    localStorage.setItem('reviews',JSON.stringify(reviews));
    const div = document.createElement('div');
    div.className='test';
    div.innerHTML=`<strong>${name}</strong><p class="small">${text}</p>`;
    reviewsRow.appendChild(div);
    reviewForm.reset();
  });
});
const mobileBtn = document.querySelector('.mobile-menu');
const topnav = document.querySelector('.topnav');
mobileBtn && mobileBtn.addEventListener('click', () => {
  topnav.classList.toggle('open');
});
const payload = {
  name,
  email,
  to: document.getElementById('to').value.trim(),
  date: document.getElementById('date').value,
  people: document.getElementById('people').value,
  extras: Array.from(document.getElementById('extras').selectedOptions).map(o => o.value),
  note: document.getElementById('note').value.trim(),
  ts: new Date().toISOString()
};
const extras = document.querySelectorAll('.extra');
extras.forEach(extra => {
  extra.addEventListener('click', () => {
    extra.classList.toggle('selected'); // –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞
  });
});

// –°–±–æ—Ä –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —É—Å–ª—É–≥ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã
document.getElementById('submitBtn').addEventListener('click', () => {
  const selectedExtras = Array.from(document.querySelectorAll('.extra.selected')).map(e => e.dataset.value);

  const payload = {
    name: document.getElementById('name').value.trim(),
    email: document.getElementById('email').value.trim(),
    to: document.getElementById('to').value.trim(),
    date: document.getElementById('date').value,
    people: document.getElementById('people').value,
    extras: selectedExtras,
    note: document.getElementById('note').value.trim(),
    ts: new Date().toISOString()
  };

  // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  const modal = document.createElement('div');
  modal.className = 'modal';
  modal.innerHTML = `<div class="modal-content">
    <h3>–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!</h3>
    <p>–°–ø–∞—Å–∏–±–æ, ${payload.name}. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
    <button class="modal-close">–ó–∞–∫—Ä—ã—Ç—å</button>
  </div>`;
  document.body.appendChild(modal);
  document.querySelector('.modal-close').addEventListener('click', () => modal.remove());

  console.log('Booking payload:', payload);
  document.getElementById('bookingForm').reset();
  extras.forEach(e => e.classList.remove('selected')); // —Å–±—Ä–æ—Å –≤—ã–±–æ—Ä–∞
});
btn.addEventListener('click', () => {
  const place = btn.dataset.place.toLowerCase();
  window.location.href = `all-destinations.html#${place}`;
});
